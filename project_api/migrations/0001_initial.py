# Generated by Django 4.1.1 on 2022-10-09 21:38

import cloudinary.models
from django.db import migrations, models
import django.utils.timezone
import project_api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='course')),
                ('course_name', models.CharField(max_length=30)),
                ('course_author', models.CharField(max_length=30)),
                ('author_designation', models.CharField(max_length=30)),
                ('author_image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='course')),
            ],
        ),
        migrations.CreateModel(
            name='Trainees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='trainee')),
                ('name', models.CharField(max_length=30)),
                ('designation', models.CharField(max_length=30)),
                ('company', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=30)),
                ('batch', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30)),
                ('experience_field', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('year_of_graduation', models.CharField(blank=True, max_length=100, null=True)),
                ('experience_in_python', models.CharField(blank=True, max_length=100, null=True)),
                ('batch', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_amount', models.CharField(blank=True, max_length=12, null=True)),
                ('role', models.CharField(max_length=20)),
                ('batch_started', models.CharField(blank=True, max_length=20, null=True)),
                ('meeting_url', models.URLField(blank=True, max_length=500, null=True)),
                ('college', models.CharField(blank=True, max_length=30, null=True)),
                ('mobile', models.CharField(blank=True, max_length=30, null=True)),
                ('Total', models.CharField(blank=True, max_length=30, null=True)),
                ('referals', models.CharField(blank=True, max_length=30, null=True)),
                ('social_media', models.URLField(blank=True, max_length=500, null=True)),
                ('skills', models.CharField(blank=True, max_length=500, null=True)),
                ('company', models.CharField(blank=True, max_length=500, null=True)),
                ('designation', models.CharField(blank=True, max_length=500, null=True)),
                ('batch_request', models.CharField(blank=True, max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', project_api.models.UserManager()),
            ],
        ),
    ]
